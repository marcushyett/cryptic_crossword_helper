name: Generate Crossword Game

on:
  workflow_dispatch:
    inputs:
      crossword_url:
        description: 'URL of the crossword JSON'
        required: true
        default: 'https://feeds.thetimes.com/puzzles/st/crossword/20250831/56928/data.json'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Download crossword data
      run: curl -s ${{ github.event.inputs.crossword_url }} > crossword.json
      
    - name: Extract answers
      run: python scripts/extract_answers.py crossword.json > game_data.json

    - name: Cache hints
      uses: actions/cache@v4
      with:
        path: hints_cache.json
        key: hints-cache-${{ hashFiles('game_data.json') }}
        restore-keys: |
          hints-cache-

    - name: Generate hints (OpenAI)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        HINTS_CONCURRENCY: '10'
      run: python scripts/generate_hints.py game_data.json hints.json explanations.json
      
    - name: Generate HTML
      run: python scripts/generate_html.py src/template.html game_data.json index.html
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
